<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_battle_ui_frame</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_ui_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the battle ui
event_inherited();
index = 0;
ACTION = 0;
ITEM = 1;
RUN = 2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the ui
var targety;
if (instance_exists(o_player_battle_unit)) {
    targety = 160+((o_player_battle_unit.state != battle_action_state)*64);
} else {
    targety = 224;
}

y = lerp(y, targety, .1);

if (point_distance(x, y, x, 160) &lt;= 16 &amp;&amp; enabled) {
    // Move ui options
    if (o_input.right_pressed &amp;&amp; index &lt; 2) {
        index += 1;
        audio_play_sound_effect(a_menu_move, false, 50);
    }
    
    if (o_input.left_pressed &amp;&amp; index &gt; 0) {
        index -= 1;
        audio_play_sound_effect(a_menu_move, false, 50);
    }
    
    // Clamp the value
    index = clamp(index, ACTION, RUN);
    
    if (o_input.action) {
        switch(index) {
            case ACTION:
                enabled = false;
                var action_list = instance_create(bbox_left+13, targety-sprite_height/2, o_action_list_ui);
                action_list.y -= action_list.height+4;
                action_list.parent = id;
                audio_play_sound_effect(a_menu_move, false, 50);
            break;
                
            case ITEM:
                enabled = false;
                var item_list = instance_create(bbox_left+13, targety-sprite_height/2, o_item_list_ui);
                item_list.y -= item_list.height+4;
                item_list.parent = id;
                audio_play_sound_effect(a_menu_move, false, 50);
            break;
            
            case RUN:
                o_player_battle_unit.state = battle_wait_state;
                var transition = instance_create(0, 0, o_fade_transition);
                transition.next_room = o_game.last_room;
                depth = 100; // set depth to show behind transition so that it fades properly
                audio_play_sound_effect(a_menu_move, false, 50);
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the battle ui
draw_self();
draw_sprite_ext(s_battle_ui_action, 0, x-40, y, 1, 1, 0, make_colour_hsv(0, 0, 127+128*(index == ACTION)), 1);
draw_sprite_ext(s_battle_ui_item, 0, x+4, y, 1, 1, 0, make_colour_hsv(0, 0, 127+128*(index == ITEM)), 1);
draw_sprite_ext(s_battle_ui_run, 0, x+48, y, 1, 1, 0, make_colour_hsv(0, 0, 127+128*(index == RUN)), 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
